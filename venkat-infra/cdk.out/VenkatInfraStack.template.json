{
  "Resources": {
    "CategoryDetailsMapperExternalAwsRoleD2526B37": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::161069081910:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "External AWS role for other AWS account[161069081910] to read the Category Details Mapper AWS App config.",
        "RoleName": "CategoryDetailsMapperExternalAwsRole"
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/CategoryDetailsMapperExternalAwsRole/Resource"
      }
    },
    "CategoryDetailsMapperAppConfigReadPolicy87AC42A1": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "appconfig:GetLatestConfiguration",
                "appconfig:StartConfigurationSession"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:appconfig:us-east-1:638373575924:application/CategoryDetailsConfig/environment/CategoryDetailsConfig-env/configuration/CategoryDetailsConfigProfile-S3BasedConfigurationProfile"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Allows app-config read access",
        "ManagedPolicyName": "CategoryDetailsMapperAppConfigReadPolicy",
        "Path": "/",
        "Roles": [
          {
            "Ref": "CategoryDetailsMapperExternalAwsRoleD2526B37"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/CategoryDetailsMapperAppConfigReadPolicy/Resource"
      }
    },
    "AmzSQSQueueA52CB2F1": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "AmzSQSQueue",
        "VisibilityTimeout": 180
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzSQSQueue/Resource"
      }
    },
    "AmzTable68895818": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "appealId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "appealId",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "AmzTable"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzTable/Resource"
      }
    },
    "AmzProducerLambdaServiceRoleBADE67C6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzProducerLambda/ServiceRole/Resource"
      }
    },
    "AmzProducerLambdaServiceRoleDefaultPolicy5C3A5CE9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AmzSQSQueueA52CB2F1",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AmzProducerLambdaServiceRoleDefaultPolicy5C3A5CE9",
        "Roles": [
          {
            "Ref": "AmzProducerLambdaServiceRoleBADE67C6"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzProducerLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "AmzProducerLambda13CD49D6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "47bf002f6c3ed6a20e957308363ff07c57836a1e8477fa5dbe3cc6d732dff0a7.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "AmzProducerLambdaServiceRoleBADE67C6",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "amz_queue_name": {
              "Fn::GetAtt": [
                "AmzSQSQueueA52CB2F1",
                "QueueName"
              ]
            }
          }
        },
        "FunctionName": "AmzProducerLambda",
        "Handler": "lambda2.lambda_handler",
        "Runtime": "python3.9",
        "Timeout": 180
      },
      "DependsOn": [
        "AmzProducerLambdaServiceRoleDefaultPolicy5C3A5CE9",
        "AmzProducerLambdaServiceRoleBADE67C6"
      ],
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzProducerLambda/Resource",
        "aws:asset:path": "asset.47bf002f6c3ed6a20e957308363ff07c57836a1e8477fa5dbe3cc6d732dff0a7",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "AmzConsumerLambdaServiceRole98B34DF3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzConsumerLambda/ServiceRole/Resource"
      }
    },
    "AmzConsumerLambdaServiceRoleDefaultPolicy87D2633E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AmzTable68895818",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AmzSQSQueueA52CB2F1",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AmzConsumerLambdaServiceRoleDefaultPolicy87D2633E",
        "Roles": [
          {
            "Ref": "AmzConsumerLambdaServiceRole98B34DF3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzConsumerLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "AmzConsumerLambdaBC503C91": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "d195e0b7663230178635995646d1143b837ffb05506cf1678d411ea663031f5b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "AmzConsumerLambdaServiceRole98B34DF3",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "amz_db_name": {
              "Ref": "AmzTable68895818"
            }
          }
        },
        "FunctionName": "AmzConsumerLambda",
        "Handler": "lambda1.lambda_handler",
        "Runtime": "python3.9",
        "Timeout": 120
      },
      "DependsOn": [
        "AmzConsumerLambdaServiceRoleDefaultPolicy87D2633E",
        "AmzConsumerLambdaServiceRole98B34DF3"
      ],
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzConsumerLambda/Resource",
        "aws:asset:path": "asset.d195e0b7663230178635995646d1143b837ffb05506cf1678d411ea663031f5b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "AmzConsumerLambdaSqsEventSourceVenkatInfraStackAmzSQSQueueC63EA54892142057": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "AmzConsumerLambdaBC503C91"
        },
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "AmzSQSQueueA52CB2F1",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/AmzConsumerLambda/SqsEventSource:VenkatInfraStackAmzSQSQueueC63EA548/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VQ0W7CMAz8lr2nZmwT74DGG9Ioe0du4lWhrQM4YUJR/50knZimPd35zrqT/QLzBTw/4bdU2nRVbxuIe4+6U0k6RIsDxNr1pNZfXHCLjC2ZD9dbfcvqX+FXn9io5CwQd4FCyShkVObGODiTyj6xmdILGVWPQ2MQ4iaw9tZxth78/Urs9y5cNG3xdLLcZvu/mlpfDyhCXmCZIc2wCrojv0JJLTVJ2VfFTQe3P1kPI/G1Y2Nz76jYGYKjzK7pW/O39LCjWFtdAns7ENQT3gFPcjZcTAEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "VenkatInfraStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}